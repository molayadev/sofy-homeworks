{"version":3,"sources":["./src/app/login/components/login/login.component.ts","./src/app/login/components/login/login.component.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/shared/services/auth.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl(''),\n  });\n  @Input() error: string | null;\n  @Output() submitEM = new EventEmitter();\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const credentials = this.form.value;\n      this.authService.login(credentials.email, credentials.password);\n      this.submitEM.emit();\n      this.router.navigate(['home']);\n    }\n  }\n\n}\n","<div class=\"card-container\">\n  <mat-card>\n    <mat-card-title>Ingresar</mat-card-title>\n    <mat-card-content>\n\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n        <div class=\"imgcontainer\">\n          <img src=\"./assets/img/img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">\n        </div>\n        <p>\n          <mat-form-field>\n            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\n          </mat-form-field>\n        </p>\n\n        <p>\n          <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"ContraseÃ±a\" formControlName=\"password\">\n          </mat-form-field>\n        </p>\n\n        <div class=\"button\">\n          <button type=\"submit\" mat-raised-button color=\"primary\">Aceptar</button>\n        </div>\n\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { MaterialModule } from '../material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { User } from 'firebase/app';\nimport { Router } from '@angular/router';\nimport { ROOT_PAGE } from '../../constants/app-config';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user: User;\n  constructor(public afAuth: AngularFireAuth,\n              private router: Router) {\n    this.afAuth.authState.subscribe(user => {\n      if (user){\n        const userLogged = JSON.stringify(user);\n        localStorage.setItem('user', userLogged);\n        console.log(userLogged);\n      } else {\n        localStorage.setItem('user', null);\n      }\n    });\n  }\n\n  async login(email: string, password: string) {\n    console.log(email, password);\n    const result = await this.afAuth.signInWithEmailAndPassword(email, password);\n    setTimeout(() => this.logout(), 3600000);\n    this.router.navigate([ROOT_PAGE]);\n  }\n\n  async sendPasswordResetEmail(passwordResetEmail: string) {\n    return await this.afAuth.sendPasswordResetEmail(passwordResetEmail);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.router.navigate(['login']);\n    this.afAuth.signOut();\n  }\n}\n"],"sourceRoot":"webpack:///"}