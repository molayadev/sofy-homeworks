{"version":3,"sources":["webpack:///src/app/shared/services/firestore.service.ts","webpack:///src/app/works/components/page/page.component.ts","webpack:///src/app/works/components/page/page.component.html","webpack:///src/app/works/works-routing.module.ts","webpack:///src/app/works/works.module.ts"],"names":["FirestoreService","firestore","item","collection","doc","valueChanges","weeks","console","log","user","name","lastname","works","subjects","providedIn","PageComponent","sanitizer","router","route","cols","showBySubject","getData","subscribe","data","defaultAvatarImg","avatarImg","bypassSecurityTrustResourceUrl","byWeek","map","element","week","id","dataWeeks","getWorksByWeek","key","text","bySubject","subject","dataSubject","getWorksBySubject","toShow","obj","index","filter","navigate","relativeTo","work","cardWork","title","getWeekTitle","img","done","subtitle","description","fileUrl","event","onPageChanges","onLastPageReached","selector","templateUrl","styleUrls","routes","path","component","WorksRoutingModule","forChild","imports","exports","WorksModule","declarations"],"mappings":"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","file":"works-works-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestoreService {\n\n  item: any;\n  weeks: {id: string, text: string}[];\n  subjects: string[];\n  user: {name: string, lastname: string};\n  works: {img: string, subject: string, title: string, week: string, fileUrl: string}[];\n\n  constructor(firestore: AngularFirestore) {\n    this.item = firestore.collection('users')\n    .doc('olaya.sofia@gmail.com')\n    .valueChanges();\n\n  }\n\n  getData(): Observable<any> {\n    return this.item;\n  }\n\n  async getWeeks() {\n    if (!this.weeks) {\n      console.log('Before');\n      this.weeks = await this.item.weeks;\n      console.log('After', this.weeks);\n    }\n    return this.weeks;\n  }\n\n  getUser() {\n    if (!this.user) {\n      this.user = {name: this.item.name, lastname: this.item.lastname}\n    }\n    return this.user;\n  }\n\n  getWorks() {\n    if (!this.works) {\n      this.works = this.item.works;\n    }\n    return this.works;\n  }\n\n  getSubjects() {\n    if (!this.subjects) {\n      this.subjects = this.item.subjects;\n    }\n    return this.subjects;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FirestoreService } from '../../../shared/services/firestore.service';\nimport { CardWork } from '../../../shared/components/card-trabajo/card-trabajo.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss']\n})\nexport class PageComponent implements OnInit {\n  cols = 1;\n  cardWorks: CardWork[];\n  works: {img: string, subject: string, title: string, week: string, fileUrl: string, done: boolean}[];\n  weeks: {id: string, text: string}[];\n  subjects: string[];\n  item: { week: string, subject?: string, worksByWeek: CardWork[], worksBySubject: CardWork[]}[];\n  toShow: { byWeek: {key: string, works: CardWork[]}[] , bySubject: {key: string, works: CardWork[]}[] };\n  user: {name: string, lastname: string, avatarImg?: any};\n  private defaultAvatarImg: string;\n  showBySubject = false;\n  constructor(\n    private sanitizer: DomSanitizer,\n    private firestore: FirestoreService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n  ngOnInit(): void {\n    this.firestore.getData().subscribe(data => {\n      this.works = [...data.works];\n      this.weeks = data.weeks;\n      this.defaultAvatarImg = data.avatarImg ? data.avatarImg : 'https://api.adorable.io/avatars/90/ubicapo.png';\n      const avatarImg = this.sanitizer.bypassSecurityTrustResourceUrl(this.defaultAvatarImg);\n      this.user = {name: data.name, lastname: data.lastname, avatarImg};\n      this.subjects = [...data.subjects];\n      console.log('SUBJECTS: ', this.subjects, this.showBySubject);\n      const byWeek = data.weeks.map(element => {\n        const week = element.id;\n        const dataWeeks = this.getWorksByWeek(week);\n        return {key: element.text, works: dataWeeks};\n      });\n      console.log('BY WEEK: ', byWeek, this.showBySubject);\n      const bySubject = this.subjects.map(element => {\n        const subject = element;\n        const dataSubject = this.getWorksBySubject(subject);\n        return {key: subject, works: dataSubject};\n      });\n      console.log('BY WEEK: ', bySubject, this.showBySubject);\n      this.toShow = {byWeek, bySubject};\n      console.log(this.item, '.asda.asdasdadsasdasd');\n    });\n  }\n\n  getFilteredSections(): string[] {\n    if (this.showBySubject) {\n      return this.subjects;\n    }\n    return this.weeks.map(obj => obj.text);\n  }\n\n  getFilteredWorks(index: number): CardWork[] {\n    if (this.showBySubject) {\n      return this.getWorksBySubject(this.subjects[index]);\n    }\n    return this.getWorksByWeek(this.weeks[index].id);\n  }\n\n  getWeekTitle(id: string) {\n    return this.weeks.filter(week => week.id === id)[0].text;\n  }\n  goToPage(id: string) {\n    this.router.navigate([id], { relativeTo: this.route } );\n  }\n\n  getWorksBySubject(subject: string) {\n    return this.works.filter(work => work.subject === subject).map( item => {\n      const cardWork: CardWork = { title: this.getWeekTitle(item.week), img: item.img, done: item.done,\n        subtitle: item.title, description: item.subject, fileUrl: item.fileUrl ? item.fileUrl : '#', avatarImg: this.defaultAvatarImg};\n      return cardWork;\n    });\n  }\n\n  getWorksByWeek(week: string) {\n    console.log(this.works);\n    return this.works.filter(work => work.week === week).map( item => {\n      const cardWork: CardWork = { title: item.subject, img: item.img, done: item.done,\n        subtitle: item.title, description: item.subject, fileUrl: item.fileUrl ? item.fileUrl : '#', avatarImg: this.defaultAvatarImg};\n      return cardWork;\n    });\n  }\n\n  getWorksFromWeek(id: string) {\n    return this.works.filter(obj => obj.week === id);\n  }\n\n  onLastPageReached() {\n    console.log('Ultima pagina alcanzada');\n  }\n\n  onPageChanges(event: any) {\n    console.log('Cambio', event);\n\n  }\n\n}\n","<section class=\"getting-started\">\n  <div class=\"fab\" style=\"position: fixed; top: 10px; right: 15px;z-index: 100; color: white;\">\n    <b style=\"color: white; font-size: larger;\">Filtrado por: </b>\n    <mat-button-toggle-group (change)=\"showBySubject = !showBySubject\" [value]=\"showBySubject\" name=\"filter\" aria-label=\"Font Style\">\n      <mat-button-toggle [value]=\"false\">Materias</mat-button-toggle>\n      <mat-button-toggle [value]=\"true\">Semanas</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <mat-pages title=\"Desarrollo - Fechas\" (pageChanged)=\"onPageChanges($event)\" (done)=\"onLastPageReached()\">\n    <mat-page-loader>\n      <mat-page-outlook title=\"Introducción\">\n      </mat-page-outlook>\n      <mat-page-content>\n        <mat-card-title> Mis Deberes </mat-card-title>\n\n        <mat-card-content class=\"mat-app-background basic-container dashboard-card-content\">\n          <div class=\"card-container\">\n            <div class=\"dashboard-card\">\n              <mat-card class=\"card\">\n                <mat-card-title><span style='flex: 1 1 auto; font-size:100px;'>🦁</span>\n                </mat-card-title>\n\n                <ul>\n                  <li style=\"text-align:left;\">\n                    <a mat-flat-button color=\"accent\">Click aquí...</a> Los deberes con este boton han sido\n                    completados.\n                    <br />\n                  </li>\n                  <br/>\n                  <li>\n                    <a disabled=\"true\" mat-stroked-button color=\"basic\">Pendiente</a> Este boton indica que aun no se han\n                    desarrollado esos deberes.\n                  </li>\n                </ul>\n\n                <mat-card-content style=\"display: flex; justify-content: center;\">\n                  <img src=\"./assets/img/study1.jpeg\" class=\"image\">\n                </mat-card-content>\n              </mat-card>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-page-content>\n    </mat-page-loader>\n    <mat-page-loader *ngFor=\"let data of (showBySubject? toShow.byWeek: toShow.bySubject); let i = index\">\n      <mat-page-outlook [title]=\"data.key\">\n      </mat-page-outlook>\n      <mat-page-content>\n        <mat-card-title> {{data.key}} </mat-card-title>\n        <mat-card-content class=\"mat-app-background basic-container dashboard-card-content\">\n          <div *ngIf=\"data.works.length === 0\">\n            <div class=\"card-container\">\n              <div class=\"dashboard-card\">\n                <mat-card class=\"card\">\n                  <mat-card-title>Muy Pronto!\n                  </mat-card-title>\n                  <mat-card-subtitle>\n                    Estamos trabajando en ello, gracias!<span style='flex: 1 1 auto; font-size:100px;'>🦁</span>\n                  </mat-card-subtitle>\n                  <mat-card-content class=\"dashboard-card-content\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <img src=\"./assets/img/study1.jpeg\" class=\"image\">\n                  </mat-card-content>\n                </mat-card>\n              </div>\n            </div>\n          </div>\n          <div *ngFor=\"let work of data.works\">\n            <app-card-trabajo [work]=\"work\"></app-card-trabajo>\n          </div>\n        </mat-card-content>\n      </mat-page-content>\n    </mat-page-loader>\n<!--\n    <mat-page-loader *ngFor=\"let week of weeks\">\n      <mat-page-outlook [title]=\"week.text\">\n      </mat-page-outlook>\n      <mat-page-content>\n        <mat-card-title> {{week.text}} </mat-card-title>\n        <mat-card-content class=\"mat-app-background basic-container dashboard-card-content\">\n          <div *ngIf=\"getWorksFromWeek(week.id).length === 0\">\n            <div class=\"card-container\">\n              <div class=\"dashboard-card\">\n                <mat-card class=\"card\" *ngFor=\"let work of getWorksFromWeek(weeks[2].id)\">\n                  <mat-card-title>Muy Pronto!\n                  </mat-card-title>\n                  <mat-card-subtitle>\n                    Estamos trabajando en ello, gracias!<span style='flex: 1 1 auto; font-size:100px;'>🦁</span>\n                  </mat-card-subtitle>\n                  <mat-card-content class=\"dashboard-card-content\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                    <img src=\"./assets/img/study1.jpeg\" class=\"image\">\n                  </mat-card-content>\n                </mat-card>\n              </div>\n            </div>\n          </div>\n          <div *ngFor=\"let work of getWorksFromWeek(week.id)\">\n            <app-card-trabajo [work]=\"work\"></app-card-trabajo>\n          </div>\n        </mat-card-content>\n      </mat-page-content>\n    </mat-page-loader>\n  -->\n    <mat-page-loader>\n      <mat-page-outlook title=\"Próximamente más contenido...\">\n      </mat-page-outlook>\n      <mat-page-content>\n        <mat-card-title> Conclusión </mat-card-title>\n        <mat-card-content class=\"mat-app-background basic-container dashboard-card-content\">\n          <div class=\"card-container\">\n            <div class=\"dashboard-card\">\n              <mat-card class=\"card\" *ngFor=\"let work of getWorksFromWeek(weeks[2].id)\">\n                <mat-card-title>Muy Pronto!\n                </mat-card-title>\n                <mat-card-subtitle>\n                  Continuará...\n                </mat-card-subtitle>\n                <mat-card-content class=\"dashboard-card-content\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n                  <img src=\"./assets/img/study2.jpeg\" class=\"image\">\n                </mat-card-content>\n              </mat-card>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-page-content>\n    </mat-page-loader>\n  </mat-pages>\n\n</section>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageComponent } from './components/page/page.component';\n\n\nconst routes: Routes = [\n  { path: '', component: PageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorksRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorksRoutingModule } from './works-routing.module';\nimport { PageComponent } from './components/page/page.component';\nimport { MatPagesModule } from '@angular-material-extensions/pages';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [PageComponent],\n  imports: [\n    CommonModule,\n    WorksRoutingModule,\n    MaterialModule,\n    MatPagesModule,\n    SharedModule\n  ]\n})\nexport class WorksModule { }\n"]}